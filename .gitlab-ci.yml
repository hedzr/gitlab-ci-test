# This file is a template, and might need editing before it works on your project.
image: golang:latest

variables:
  # Please edit to your GitLab project
  NS: hedzr
  REPO: gitlab-ci-test
  REPO_NAME: 22os.com/$NS/$REPO
  APP_NAME:  $REPO

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

stages:
  - test
  - build
  - deploy

format:
  stage: test
  tags: [docker,22os.com]
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -race $(go list ./... | grep -v /vendor/)

compile:
  stage: build
  tags: [docker,22os.com]
  dependencies: [format]
  script:
    - go build -race -ldflags "-extldflags '-static'" -o $CI_PROJECT_DIR/$APP_NAME
  artifacts:
    paths:
      - $APP_NAME

deploy:
  stage: deploy
  tags: [docker,22os.com]
  dependencies: [compile]
  script:
    - |
      [ -d ~/.ssh ] || mkdir ~/.ssh
      echo $ROBOT_PRIVATE_KEY > ~/.ssh/id_rsa
    - |
      cat >~/.ssh/config <<-EOF
      Host github.com
        StrictHostKeyChecking no
        UserKnownHostsFile=/dev/null

      Host gitlab.com
        StrictHostKeyChecking no
        UserKnownHostsFile=/dev/null

      Host gitee.com
        StrictHostKeyChecking no
        UserKnownHostsFile=/dev/null

      EOF
    - |
      # git remote add github github.com/$NS/$REPO
      # git remote add gitlab gitlab.com/$NS/$REPO
      # git remote add gitee  gitee.com/$NS/$REPO
      git remote add all github.com/$NS/$REPO
      git remote set-url --add --push all gitlab.com/$NS/$REPO
      git remote set-url --add --push all gitee.com/$NS/$REPO
    - |
      # ssh -o "StrictHostKeyChecking no" git@github.com
      cat ~/.ssh/config
      echo "-------------"
      env|sort
      echo "-------------"
      git push all --all
      git push all --tags
